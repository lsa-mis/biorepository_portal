<h3>Advanced Search</h3>
<%= search_form_for @q, url: search_items_path, method: :get, turbo: true, data: { controller: "search", action: "submit->search#submit", search_target: "form", turbo_frame: "items_result_list" } do |f| %>
  <div class="m-2">

    <!-- Strings - use _i_cont (contains) or _eq (exact match) -->
    <div class="mb-3">
      <h5>Select Collections:</h5>
      <div class="btn-group btn-group-toggle flex-wrap" data-toggle="buttons">
        <% @all_collections.each do |collection| %>
          <label class="btn btn-outline-primary m-1">
            <%= f.check_box :collection_id_in, { multiple: true, id: "collection_#{collection.id}", autocomplete: "off" }, collection.id, nil %>
            <%= collection.division %>
          </label>
        <% end %>
      </div>
    </div>


    <%# dynamic search %>
    <div>
      <div id="groups-container" data-search-target="groupsContainer">
        <div data-search-target="group" class="search-group mb-3 p-3 rounded border border-primary">
          <div data-search-target="rows">
            <%= render partial: "layouts/search_field" %>
          </div>

          <button type="button" class="btn btn-outline-primary mt-1" data-action="click->search#addRow">+ Add Field</button>
        </div>
      </div>

      <template data-search-target="groupTemplate">
        <div data-search-target="group" class="search-group mb-3 p-3 rounded border border-primary">
          <div data-search-target="rows">
            <%= render partial: "layouts/search_field" %>
          </div>

          <button type="button" class="btn btn-outline-primary mt-1" data-action="click->search#addRow">+ Add Field</button>
        </div>
      </template>

      <button type="button" class="btn btn-outline-primary mb-3" data-action="click->search#addGroup">+ Add OR Group</button>
    </div>

    <div class="row">
      <div class="col-md-6 mb-3">
        <h5>Country or Region</h5>
        <small>Select one or more countries or regions to narrow your results</small>
        <input type="text" class="form-control my-2" placeholder="Filter" onkeyup="filterCheckboxes('country-filters', this.value)">

        <div id="country-filters" style="max-height: 200px; overflow-y: auto; border: 1px solid #ccc; padding: 8px;">
          <% if @countries.blank? %>
            <p>No countries available to select from.</p>
          <%else%>
            <% @countries.each do |country| %>
              <div class="form-check">
                <%= check_box_tag "q[country_i_matches_any][]", country, params.dig(:q, :country_i_matches_any)&.include?(country), id: "country_#{country.parameterize}" %>
                <%= label_tag "q_country_in_#{country.parameterize}", country %>
              </div>
            <% end %>
          <% end %>
        </div>
      </div>

      <div class="col-md-6 mb-3">
        <h5>State / Province</h5>
        <small>Select one or more states or provinces to narrow your results</small>
        <input type="text" class="form-control my-2" placeholder="Filter" onkeyup="filterCheckboxes('state-filters', this.value)">

        <div id="state-filters" style="max-height: 200px; overflow-y: auto; border: 1px solid #ccc; padding: 8px;">
          <% if @states.blank? %>
            <p>No states or provinces available to select from.</p>
          <%else%>
            <% @states.each do |state| %>
              <% state_id = "state_#{state.parameterize}" %>
              <div class="form-check">
                <%= check_box_tag "q[state_province_i_matches_any][]", state, params.dig(:q, :state_province_i_matches_any)&.include?(state), id: state_id %>
                <%= label_tag state_id, state %>
              </div>
            <% end %>
          <% end %>
        </div>
      </div>

      <div class="col-md-6 mb-3">
        <h5>Sex</h5>
        <small>Select sex to narrow your results</small>
        <input type="text" class="form-control my-2" placeholder="Filter" onkeyup="filterCheckboxes('sex-filters', this.value)">

        <div id="sex-filters" style="max-height: 200px; overflow-y: auto; border: 1px solid #ccc; padding: 8px;">
          <% if @sexs.blank? %>
            <p>No sex options available to select from.</p>
          <% else %>
            <% @sexs.each do |sex| %>
              <% sex_id = "sex_#{sex.parameterize}" %>
              <div class="form-check">
                <%= check_box_tag "q[sex_i_matches_any][]", sex, params.dig(:q, :sex_i_matches_any)&.include?(sex), id: sex_id %>
                <%= label_tag sex_id, sex %>
              </div>
            <% end %>
          <% end %>
        </div>
      </div>

      <div class="col-md-6 mb-3">
        <h5>Continent</h5>
        <small>Select one or more continents to narrow your results</small>
        <input type="text" class="form-control my-2" placeholder="Filter" onkeyup="filterCheckboxes('continent-filters', this.value)">

        <div id="continent-filters" style="max-height: 200px; overflow-y: auto; border: 1px solid #ccc; padding: 8px;">
          <%if @continents.present?%>
            <% @continents.each do |continent| %>
              <% continent_id = "continent_#{continent.parameterize}" %>
              <div class="form-check">
                <%= check_box_tag "q[continent_i_matches_any][]", continent, params.dig(:q, :continent_i_matches_any)&.include?(continent), id: continent_id %>
                <%= label_tag continent_id, continent %>
              </div>
            <% end %>
          <% else %>
            <p>No continent available to select from.</p>
          <% end %>
        </div>
      </div>
    </div>
    <div>
      <!-- Dates - use _gteq / _lteq -->
      <%= f.label :event_date_start_gteq, "Event Date Start (After)" %>
      <%= f.date_field :event_date_start_gteq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
    <div>
      <%= f.label :event_date_end_lteq, "Event Date End (Before)" %>
      <%= f.date_field :event_date_end_lteq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
    <div>
      <%= f.label :georeferenced_date_eq, "Georeferenced Date" %>
      <%= f.date_field :georeferenced_date_eq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
    <div>
      <%= f.label :modified_eq, "Date Modified" %>
      <%= f.date_field :modified_eq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
    <div>
      <!-- Numbers - use _gteq / _lteq / _eq -->
      <%= f.label :coordinate_uncertainty_in_meters_lteq, "Max Coord. Uncertainty" %>
      <%= f.search_field :coordinate_uncertainty_in_meters_lteq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
    <div>
      <%= f.label :individual_count_gteq, "Minimum Individual Count" %>
      <%= f.search_field :individual_count_gteq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
    <div>
      <%= f.label :minimum_elevation_in_meters_gteq, "Min Elevation" %>
      <%= f.search_field :minimum_elevation_in_meters_gteq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
    <div>
      <%= f.label :maximum_elevation_in_meters_lteq, "Max Elevation" %>
      <%= f.search_field :maximum_elevation_in_meters_lteq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
    <div>
      <%= f.label :decimal_latitude_eq, "Latitude" %>
      <%= f.search_field :decimal_latitude_eq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
    <div>
      <%= f.label :decimal_longitude_eq, "Longitude" %>
      <%= f.search_field :decimal_longitude_eq, placeholder: 'Continent Name', class: "form-control form-control-sm"  %>
    </div>
  </div>

  <div>
    <%= f.submit "Search", class: "btn btn-primary" %>
  </div>
<% end %>

<%# JavaScript part %>
<script>
  function filterCheckboxes(containerId, filterText) {
    const container = document.getElementById(containerId);
    const checkboxes = container.querySelectorAll(".form-check");

    const lowerFilter = filterText.toLowerCase();

    checkboxes.forEach((checkbox) => {
      const label = checkbox.textContent.toLowerCase();
      if (label.includes(lowerFilter)) {
        checkbox.style.display = "";
      } else {
        checkbox.style.display = "none";
      }
    });
  }
</script>

