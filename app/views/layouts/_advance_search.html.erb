<div class="d-flex justify-content-between align-items-center mb-3">
  <h1 class="mb-0">Advanced Search</h1>

  <%= link_to "Clear Filters", search_items_path(switch_view: @view), class: "btn btn-outline-secondary" %>
</div>

<%= search_form_for @q, url: search_items_path, html: { id: "search-form" }, method: :get, turbo: true, data: { controller: "search", action: "submit->search#submit", search_target: "form" } do |f| %>

  <div class="m-2">
    <div class="d-flex justify-content-between align-items-center gap-2 mb-2">
      <div>
        <label for="switch_view" class="h5">Switch View</label>
        <%= select_tag "switch_view", options_for_select(item_views, selected: @view), :"data-action" => "search#submit" %>
      </div>
      <div>
        <label for="per" class="h5">Items per page:</label>
        <%= select_tag :per, options_for_select([25, 50, 100, 150, 200], params[:per]), "data-action": "search#submit" %>
      </div>
      <div class="mt-4">
        <%= link_to export_to_csv_path(request.parameters.slice(:q).merge(format: 'csv')), class: "link_to" do %>
          Export to CSV
        <% end %>
      </div>
    </div>

    <!-- Strings - use _i_cont (contains) or _eq (exact match) -->
    <div class="mb-3">
      <div class="d-flex justify-content-between align-items-center mb-2">
        <h2>Select Collections:</h2>
        <%= f.submit "Search", class: "btn btn-primary" %>
      </div>
      <div class="btn-group btn-group-toggle flex-wrap" data-toggle="buttons">
        <% @all_collections.each do |collection| %>
          <label class="btn btn-outline-primary m-1">
            <%= f.check_box :collection_id_in, { multiple: true, id: "collection_#{collection.id}", autocomplete: "off", "data-action": "search#submit" }, collection.id, nil %>
            <%= collection.division %>
          </label>
        <% end %>
      </div>
    </div>
    <%= render partial: 'layouts/advance_filters', locals: { f: f } %>
  </div>

  <div>
    <%= f.submit "Search", class: "btn btn-primary" %>
  </div>
<% end %>

<%# JavaScript part %>
<script>
  function filterCheckboxes(containerId, filterText) {
    const container = document.getElementById(containerId);
    const checkboxes = container.querySelectorAll(".form-check");

    const lowerFilter = filterText.toLowerCase();

    checkboxes.forEach((checkbox) => {
      const label = checkbox.textContent.toLowerCase();
      if (label.includes(lowerFilter)) {
        checkbox.style.display = "";
      } else {
        checkbox.style.display = "none";
      }
    });
  }
</script>


